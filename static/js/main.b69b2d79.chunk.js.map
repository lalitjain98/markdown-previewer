{"version":3,"sources":["components/MainComponent.js","components/HeaderComponent.js","components/FooterComponent.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","input","showModal","handleChange","bind","assertThisInitialized","setPreview","event","setState","target","value","styles","mainContainer","marginBottom","padding","minHeight","sectionHeading","border","borderRadius","editorContainer","display","borderTop","editor","previewContainer","height","width","marginRight","whiteSpace","overflowX","preview","react_default","a","createElement","Row","className","style","Col","xs","lg","id","rows","onChange","dangerouslySetInnerHTML","__html","marked","breaks","Component","Header","backgroundColor","color","Footer","marginTop","href","App","Fragment","Container","fluid","HeaderComponent","MainComponent","FooterComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gTAwKeA,cAjKd,SAAAA,EAAYC,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAA,OACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA8CDQ,MAAQ,CACZC,MA9CgB,8qCA+ChBC,WAAW,GAEZT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACpBA,EAAKa,WAAab,EAAKa,WAAWF,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KApDDA,4EAwDLc,GACZX,KAAKY,SAAS,CACbP,MAAOM,EAAME,OAAOC,yCAwBrB,IAAIC,EAAS,CACZC,cAAe,CACdC,aAAc,MACdC,QAAS,MACTC,UAAW,OAIZC,eAAgB,CACfC,OAAQ,iBACRC,aAAc,OAEfC,gBAAiB,CAChBC,QAAS,QACTH,OAAQ,iBACRI,UAAW,MACXH,aAAc,OAIfI,OAAQ,CACNP,UAAW,QAGbQ,iBAAkB,CACjBH,QAAS,QACTI,OAAQ,OACRC,MAAO,OACPR,OAAQ,iBACRC,aAAc,MACdJ,QAAS,QACTY,YAAa,MACbC,WAAY,UACZC,UAAW,UAEZC,QAAS,CACRf,QAAS,cAIX,OAGEgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,yBAAyBC,MAAOxB,EAAOC,eACrDkB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAChBR,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BAA4BC,MAAOxB,EAAOK,gBAAxD,UACAc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBC,MAAOxB,EAAOQ,iBAC/CW,EAAAC,EAAAC,cAAA,YACCE,UAAU,yBACVK,GAAG,SACHJ,MAAOxB,EAAOW,OACdkB,KAAM,GACN9B,MAAOd,KAAKI,MAAMC,MAClBwC,SAAU7C,KAAKO,iBAIlB2B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAChBR,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BAA4BC,MAAOxB,EAAOK,gBAAxD,WAKAc,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAoBC,MAAOxB,EAAOY,iBAAkBgB,GAAG,UAAUG,wBAAyB9C,KAAKU,uDAWnH,MAAO,CAACqC,OAAQC,IAAOhD,KAAKI,MAAMC,MAAO,CAAC4C,QAAQ,YA/JjCC,aCcJC,eAhBA,SAACvD,GACf,OACCsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCC,UAAU,yBACVC,MAAO,CACNrB,QAAS,MACTkC,gBAAgB,UAChBC,MAAO,YAERnB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACRP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,0BCYWgB,EAtBA,SAAC1D,GACf,OACCsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCC,UAAU,yBACVC,MAAO,CACNa,gBAAiB,UACjBC,MAAO,UACPE,UAAW,MACXrC,QAAS,QAEVgB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACRP,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAb,eACaJ,EAAAC,EAAAC,cAAA,KAAGvB,OAAO,SAAS2C,KAAK,0BAAxB,cAEbtB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAb,qBACmBJ,EAAAC,EAAAC,cAAA,KAAGvB,OAAO,SAAS2C,KAAK,qDAAxB,0DCQRC,mLAdX,OACCvB,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACDxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAWC,OAAK,EAACtB,UAAU,kBAC1BJ,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAC0B,EAAD,OAED5B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAWC,OAAK,GACf1B,EAAAC,EAAAC,cAAC2B,EAAD,eATab,aCEEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b69b2d79.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Container,  Row, Col, Modal, ModalBody, ModalHeader} from 'reactstrap';\r\n\r\nimport marked from 'marked';\r\n\r\nclass Main extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tlet initialInput=\"# Welcome to my React Markdown Previewer!\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"## This is a sub-heading...\\n\" +\r\n\t\t\t\"### And here's some other cool stuff:\\n\" +\r\n\t\t\t\"  \\n\" +\r\n\t\t\t\"Heres some code, `<div></div>`, between 2 backticks.\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"```\\n\" +\r\n\t\t\t\"// this is multi-line code:\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"function anotherExample(firstLine, lastLine) {\\n\" +\r\n\t\t\t\"  if (firstLine == '```' && lastLine == '```') {\\n\" +\r\n\t\t\t\"    return multiLineCode;\\n\" +\r\n\t\t\t\"  }\\n\" +\r\n\t\t\t\"}\\n\" +\r\n\t\t\t\"```\\n\" +\r\n\t\t\t\"  \\n\" +\r\n\t\t\t\"You can also make text **bold**... whoa!\\n\" +\r\n\t\t\t\"Or _italic_.\\n\" +\r\n\t\t\t\"Or... wait for it... **_both!_**\\n\" +\r\n\t\t\t\"And feel free to go crazy ~~crossing stuff out~~.\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"There's also [links](https://www.freecodecamp.com), and\\n\" +\r\n\t\t\t\"> Block Quotes!\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"And if you want to get really crazy, even tables:\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"Wild Header | Crazy Header | Another Header?\\n\" +\r\n\t\t\t\"------------ | ------------- | ------------- \\n\" +\r\n\t\t\t\"Your content can | be here, and it | can be here....\\n\" +\r\n\t\t\t\"And here. | Okay. | I think we get it.\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"- And of course there are lists.\\n\" +\r\n\t\t\t\"  - Some are bulleted.\\n\" +\r\n\t\t\t\"     - With different indentation levels.\\n\" +\r\n\t\t\t\"        - That look like this.\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"1. And there are numbererd lists too.\\n\" +\r\n\t\t\t\"1. Use just 1s if you want! \\n\" +\r\n\t\t\t\"1. But the list goes on...\\n\" +\r\n\t\t\t\"- Even if you use dashes or asterisks.\\n\" +\r\n\t\t\t\"* And last but not least, let's not forget embedded images:\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"![React Logo w/ Text](https://goo.gl/Umyytc)\\n\";\r\n\t\tthis.state = {\r\n\t\t\tinput : initialInput,\r\n\t\t\tshowModal: false\r\n\t\t};\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.setPreview = this.setPreview.bind(this);\r\n\t\t// this.toggleModal = this.toggleModal.bind(this);\r\n\t}\r\n\r\n\thandleChange(event){\r\n\t\tthis.setState({\r\n\t\t\tinput: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\t// toggleModal(){\r\n\t// \tthis.setState({\r\n\t// \t\tshowModal: !this.state.showModal\r\n\t// \t});\r\n\t// }\r\n\r\n\t/*\r\n\t<Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n\t\t\t\t\t<ModalHeader>\r\n\t\t\t\t\t\t<h2>Preview</h2>\r\n\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={this.setPreview()}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n\t*/\r\n\r\n\trender() {\r\n\r\n\t\tlet styles = {\r\n\t\t\tmainContainer: {\r\n\t\t\t\tmarginBottom: \"1em\",\r\n\t\t\t\tpadding: \"1em\",\r\n\t\t\t\tminHeight: \"80%\"\r\n\t\t\t\t// position: \"absolute\",\r\n\t\t\t\t// overflow: \"scroll\"\r\n\t\t\t},\r\n\t\t\tsectionHeading: {\r\n\t\t\t\tborder: \"1px solid #aaa\",\r\n\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t},\r\n\t\t\teditorContainer: {\r\n\t\t\t\tdisplay: \"block\",\r\n\t\t\t\tborder: \"1px solid #aaa\",\r\n\t\t\t\tborderTop: \"0px\",\r\n\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t//padding: \"0.5em 0em\"\r\n\t\t\t\t// height: \"100%\"\r\n\t\t\t},\r\n\t\t\teditor: {\r\n\t\t\t\t minHeight: \"100%\",\r\n\t\t\t\t // width: \"100%\"\r\n\t\t\t},\r\n\t\t\tpreviewContainer: {\r\n\t\t\t\tdisplay: \"block\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\tborder: \"1px solid #aaa\",\r\n\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\tpadding: \"0.5em\",\r\n\t\t\t\tmarginRight: \"1em\",\r\n\t\t\t\twhiteSpace: \"no-wrap\",\r\n\t\t\t\toverflowX: \"scroll\",\r\n\t\t\t},\r\n\t\t\tpreview: {\r\n\t\t\t\tpadding: \"0.5em 0em\",\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t//<Container fluid>\r\n\r\n\t\t\t\t<Row className=\"justify-content-center\" style={styles.mainContainer}>\r\n\t\t\t\t\t<Col xs={12} lg={6}>\r\n\t\t\t\t\t\t<h3 className=\"text-dark section-heading\" style={styles.sectionHeading}>Editor</h3>\r\n\t\t\t\t\t\t<div className=\"editor-container\" style={styles.editorContainer}>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tclassName=\"form-text form-control\"\r\n\t\t\t\t\t\t\t\tid=\"editor\"\r\n\t\t\t\t\t\t\t\tstyle={styles.editor}\r\n\t\t\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\t\t\tvalue={this.state.input}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t<Col xs={12} lg={6}>\r\n\t\t\t\t\t\t<h3 className=\"text-dark section-heading\" style={styles.sectionHeading}>Preview</h3>\r\n\t\t\t\t\t\t{/*<div className=\"d-flex justify-content-between\">*/}\r\n\t\t\t\t\t\t\t{/*<h3 className=\"p-2 text-dark\" style={{border: \"1px solid #aaa\", borderRadius: \"5px\"}}>Preview</h3>*/}\r\n\t\t\t\t\t\t\t{/*<button onClick={this.toggleModal}><span className=\"fa fa-3x fa-expand\"></span></button>*/}\r\n\t\t\t\t\t\t{/*</div>*/}\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"preview-container\" style={styles.previewContainer} id=\"preview\" dangerouslySetInnerHTML={this.setPreview()}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t</Row>\r\n\t\t\t//</Container>\r\n\t\t);\r\n\t}\r\n\r\n\tsetPreview() {\r\n\t\treturn {__html: marked(this.state.input, {breaks: true})}\r\n\t}\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport {Container, Row, Col} from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<Row\r\n\t\t\tclassName=\"justify-content-center\"\r\n\t\t\tstyle={{\r\n\t\t\t\tpadding: \"1em\",\r\n\t\t\t\tbackgroundColor:\"#004D40\",\r\n\t\t\t\tcolor: \"#B2DFDB\",\r\n\t\t\t}}>\r\n\t\t\t<Col xs={12}>\r\n\t\t\t\t<h2 className=\"mx-auto text-center\">Markdown Previewer</h2>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport {NavLink, Container, Row, Col} from 'reactstrap';\r\n\r\nconst Footer = (props) => {\r\n\treturn (\r\n\t\t<Row\r\n\t\t\tclassName=\"justify-content-center\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: \"#004D40\",\r\n\t\t\t\tcolor: \"#B2DFDB\",\r\n\t\t\t\tmarginTop: \"1em\",\r\n\t\t\t\tpadding: \"1em\"\r\n\t\t\t}}>\r\n\t\t\t<Col xs={12}>\r\n\t\t\t\t<p className=\"mx-auto text-center\">\r\n\t\t\t\t\tBuilt using <a target=\"_blank\" href=\"https://marked.js.org/\">Marked.js</a>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"mx-auto text-center\">\r\n\t\t\t\t\tGithub Repo Link: <a target=\"_blank\" href=\"https://github.com/lalitjain98/markdown-previewer\"> github.com/lalitjain98/markdown-previewer</a>\r\n\t\t\t\t</p>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport Header from './components/HeaderComponent';\nimport Footer from './components/FooterComponent';\n\nimport {Container} from \"reactstrap\";\n\nclass App extends Component {\n  render() {\n    return (\n    \t<React.Fragment>\n\t\t\t\t<Container fluid className=\"main-container\">\n\t\t\t\t\t<Header/>\n\t\t\t\t\t<Main />\n\t\t\t\t</Container>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</Container>\n\t\t\t\t</React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}